#' --------------------------------------------------------------------------------------------------
#+ bbch_years_thres, echo=TRUE, eval=TRUE, include=TRUE
bbch09
length(bbch09)
head(data_xts1)
head(data_calib)
dim(data_calib)
# i <- 1
My_cdd_thr <- function(bbch09, data_xts1, data_calib, t.mean.col, i, obs_lst, bbch09_doy){ # i = 15, number of time frames
data_xts_subset <- data_xts1[paste0(data_calib[i,"date_ini"],"/", data_calib[i,"date_end"])]
year <- format(index(data_xts_subset), format = "%Y")
doy <- format(index(data_xts_subset), format = "%j")
data_xts_subset <- cbind(data_xts_subset, year, doy)
head(data_xts_subset)
tail(data_xts_subset)
years <- factor(data_xts_subset[,"year"])
remich_years <- split(data_xts_subset, years)
#' Calculation of cumulative degree-days by a lower, upper and heat temperature thresholds (Molitor et al., 2014)
#' --------------------------------------------------------------------------------------------------
# thresholds for cultivar
cdd_luht <- cdd.luhThresh(data = remich_years,
t.mean.col = t.mean.col, a = a, b = b, c = c)
#' Calculation of BBCHs thresholds
#' --------------------------------------------------------------------------------------------------
cdd <- lapply(1:length(cdd_luht), function(ii){ # length(cdd_luht) = 10, number of years in time frame
# ii <- 4
year_ii <- as.numeric(cdd_luht[[ii]][1,"year"])
cdd_i_obs <- sapply(1:length(obs_lst), function(i_obs){
# i_obs <- 3 # 21 is empty
if((length(obs_lst[[i_obs]]) > 0) & (i_obs != 7)) {
doy_obs_id <- which(obs_lst[[i_obs]][, 1] == as.numeric(year_ii))
doy_obs <- obs_lst[[i_obs]][doy_obs_id, 2]
if(length(doy_obs) == 0) return(NULL)
doy09_id <- which(colnames(bbch09_doy[i,]) == as.character(year_ii))
doy09 <- bbch09_doy[i, doy09_id]
head(cdd_luht[[1]])
write.csv(cdd_luht[[1]], file = paste0(folder.output, "/tmp_cdd_luht.csv"))
# id_ini <- which(cdd_luht[[ii]][, "doy"] == doy09)
# id_end <- which(cdd_luht[[ii]][, "doy"] == doy_obs)
# cdd <- sum(cdd_luht[[ii]][doy09:doy_obs, "cdd_luht"]) #  is not the sum because cdd is computed already the cumulative
cdd <- as.numeric(cdd_luht[[ii]][doy_obs, "cdd_luht"]) - as.numeric(cdd_luht[[ii]][doy09, "cdd_luht"])
cdd <- cbind.data.frame(year = year_ii, bbch = as.character(labels(obs_lst))[i_obs], cdd = cdd)
# print(paste0("time-frame", i, " year", ii, " bbch-id", i_obs))
}else NULL
})
})
}
cdd_lst <- lapply(1:nrow(data_calib), function(i) My_cdd_thr(bbch09 = bbch09, data_xts1 = data_xts1,
data_calib = data_calib,
t.mean.col = t.mean.col, i = i,
obs_lst = obs_lst, bbch09_doy = bbch09_doy))
cdd <- sapply(cdd_lst, function(x) do.call(rbind, x))
res <- vector()
cdd <- lapply(cdd, function(x){
# x <- cdd[[1]]
for(i in 1:length(x)){
# i <- 21
ifelse(is.null(x[[i]]), next, res <- rbind(res, x[[i]]))
}
return(res)
})
cdd
#' Computing average threshold
res <- lapply(cdd, function(x){
bbchs <- factor(x[,"bbch"])
res <- split(x, bbchs)
})
res
# x <- res[[1]]
res <- lapply(res, function(x){
# sapply(x, function(i) rbind.data.frame(year_ini = i[1,"year"], year_end = i[nrow(i),"year"], cdd_mean = mean(i[, "cdd"])))
cdd_mean <- sapply(x, function(i) {
cdd_mean <- mean(i[, "cdd"])
})
res <- cbind.data.frame(date_ini = x[[1]][1,"year"], date_end = x[[1]][nrow(x[[1]]),"year"], t(cdd_mean)) #  index 1 = frst element because all are equal time.frame
})
res
res <- do.call(rbind, res)
# res[, "BBCH.03"] <- -res[, "BBCH.03"]
res[, "date_ini"] <- paste0(res[, "date_ini"], "-01-01")
res[, "date_end"] <- paste0(res[, "date_end"], "-12-31")
id <- which(colnames(res) == "BBCH.03")
cdd_mean <- res[,1:id]
cdd_mean[,"BBCH.09"] <- 0
cdd_mean <- cbind(cdd_mean, res[,4:ncol(res)])
cdd_mean
summary(cdd_mean)
write.csv(cdd_mean, file=paste0(folder.output, "/cdd_mean_thresholds.csv"))
#' Compute BBCH 09 per time frames in simulation mode
#' --------------------------------------------------------------------------------------------------
#+ bbch09_sim, echo=TRUE, eval=TRUE, include=TRUE
bbch09_doy
head(data_xts1)
data_calib
date_sim_ini <- "1974-01-01"
date_sim_end <- "2020-12-31"
My_doy_bbch_sim <- function(data_xts1, data_calib, t.mean.col, i, date_sim_ini, date_sim_end){ # i = 15, number of time frames
data_xts_subset <- data_xts1[paste0(date_sim_ini,"/", date_sim_end)]
year <- format(index(data_xts_subset), format = "%Y")
doy <- format(index(data_xts_subset), format = "%j")
data_xts_subset <- cbind(data_xts_subset, year, doy)
head(data_xts_subset)
tail(data_xts_subset)
years <- factor(data_xts_subset[,"year"])
remich_years <- split(data_xts_subset, years)
#' Calculation of cumulative degree days (CDD) by the simple algorithm (Nelder, 2010) for bud break
#' --------------------------------------------------------------------------------------------------
head(remich_years[[1]])
cdd_bb_simple <- vineyard::cdd.simple.budbreak(data = remich_years,
t.mean.col = t.mean.col,
start.month = as.numeric(round(data_calib[i,"month"], digits = 0)),
start.day = as.numeric(round(data_calib[i,"day"], digits = 0)))
head(cdd_bb_simple[[3]])
tail(cdd_bb_simple[[3]])
#' Calculation of cumulative degree-days by a lower, upper and heat temperature thresholds (Molitor et al., 2014)
#' --------------------------------------------------------------------------------------------------
# thresholds for cultivar
cdd_luht <- vineyard::cdd.luhThresh(data = remich_years,
t.mean.col = t.mean.col, a = a, b = b, c = c)
#' Calculation of phenology by the lower, upper and heat temperature thresholds (Molitor et al., 2014)
#' --------------------------------------------------------------------------------------------------
# mean cumulative heat sum for bud break in degree celsius for simple bub break
cdd_phen_simple_luht <- vineyard::cdd.simple.luhThresh.phenology(cdd.bb = cdd_bb_simple,
cdd.luht = cdd_luht,
chs.mean = as.numeric(round(data_calib[i,"chs_mean"], digits = 2)))
head(cdd_phen_simple_luht[[1]])
tail(cdd_phen_simple_luht[[length(cdd_phen_simple_luht)]])
#' Doy BBCH09 definition
#' --------------------------------------------------------------------------------------------------
bbch09 <- lapply(cdd_phen_simple_luht, function(x) x[1,]) # the first row is the BBCH.09
bbch09 <- do.call(rbind, bbch09)
bbch09 <- cbind.data.frame(bbch09, date_ini = data_calib[i, "date_ini"], date_end = data_calib[i,"date_end"])
return(bbch09)
}
bbch09_sim <- lapply(1:nrow(data_calib), function(i) My_doy_bbch_sim(data_xts1 = data_xts1,
data_calib = data_calib,
t.mean.col = t.mean.col,
i = i,
date_sim_ini = date_sim_ini,
date_sim_end = date_sim_end))
str(bbch09_sim)
bbch09_sim[[1]]
bbch09_doy_sim <- lapply(bbch09_sim, function(x){
dat <- data.frame(year = 1974:2020)
date_ini <- x[1,"date_ini"]
date_end <- x[1,"date_end"]
dat <- merge(dat, x, by = "year", all = TRUE)
dat1 <- t(dat[, c("doy")])
dat1 <- cbind.data.frame(date_ini = date_ini, date_end= date_end, dat1)
colnames(dat1) <- c("date_ini", "date_end", dat[,"year"])
return(dat1)
})
bbch09_doy_sim <- do.call(rbind, bbch09_doy_sim)
write.csv(bbch09_doy_sim, file = paste0(folder.output, "/bbch09_doy_sim.csv"))
#' Calculation of phenology stages (from BBCH 09 onwards) by the lower, upper and heat temperature
#' thresholds (Molitor et al., 2014) - Simulation mode
#' --------------------------------------------------------------------------------------------------
#+ phenology_molitor3_sim, echo=TRUE, eval=TRUE, include=TRUE
data(GrowthStage_CDD)
GrowthStage_CDD
GrowthStage_CDD_calib <- GrowthStage_CDD[c(1,1,15, 17, 24, 27), 1:3]
GrowthStage_CDD_calib[1,1:2] <- c("3", "End of bud swelling: buds swollen, but not green")
GrowthStage_CDD_calib[,3] <- NA
row.names(GrowthStage_CDD_calib) <- 1:nrow(GrowthStage_CDD_calib)
GrowthStage_CDD_calib
My_doy_bbch_sim <- function(data_xts1, data_calib, t.mean.col, i, date_sim_ini, date_sim_end, GrowthStage_CDD_calib, cdd_mean){ # i = 15, number of time frames
data_xts_subset <- data_xts1[paste0(date_sim_ini,"/", date_sim_end)]
year <- format(index(data_xts_subset), format = "%Y")
doy <- format(index(data_xts_subset), format = "%j")
data_xts_subset <- cbind(data_xts_subset, year, doy)
# head(data_xts_subset)
# tail(data_xts_subset)
years <- factor(data_xts_subset[,"year"])
remich_years <- split(data_xts_subset, years)
#' Calculation of cumulative degree days (CDD) by the simple algorithm (Nelder, 2010) for bud break
#' --------------------------------------------------------------------------------------------------
head(remich_years[[1]])
cdd_bb_simple <- vineyard::cdd.simple.budbreak(data = remich_years,
t.mean.col = t.mean.col,
start.month = as.numeric(round(data_calib[i,"month"], digits = 0)),
start.day = as.numeric(round(data_calib[i,"day"], digits = 0)))
# head(cdd_bb_simple[[3]])
# tail(cdd_bb_simple[[3]])
#' Calculation of cumulative degree-days by a lower, upper and heat temperature thresholds (Molitor et al., 2014)
#' --------------------------------------------------------------------------------------------------
# thresholds for cultivar
cdd_luht <- vineyard::cdd.luhThresh(data = remich_years,
t.mean.col = t.mean.col, a = a, b = b, c = c)
#' Calculation of phenology by the lower, upper and heat temperature thresholds (Molitor et al., 2014)
#' --------------------------------------------------------------------------------------------------
# mean cumulative heat sum for bud break in degree celsius for simple bub break
cdd_phen_simple_luht <- vineyard::cdd.simple.luhThresh.phenology(cdd.bb = cdd_bb_simple,
cdd.luht = cdd_luht,
chs.mean = as.numeric(round(data_calib[i,"chs_mean"], digits = 2)))
# head(cdd_phen_simple_luht[[1]])
# tail(cdd_phen_simple_luht[[length(cdd_phen_simple_luht)]])
# Phenological stages simple bud break
GrowthStage_CDD_calib[,3] <- as.numeric(cdd_mean[i,3:ncol(cdd_mean)])
phen_simple_luht <- vineyard::phenology.stages(cdd.phen = cdd_phen_simple_luht,
ref.data = GrowthStage_CDD_calib,
stage = as.integer(GrowthStage_CDD_calib[-1,1]),
cultivar = cultivar)
phen_simple_luht
# TODO: this tables should be generic
table.simple.09 <- lapply(phen_simple_luht, function(x) bbch09 <- x[2,"doy"])
table.simple.09 <- do.call(rbind, table.simple.09)
table.simple.63 <- lapply(phen_simple_luht, function(x) bbch63 <- x[3, "doy"])
table.simple.63 <- do.call(rbind, table.simple.63)
table.simple.68 <- lapply(phen_simple_luht, function(x) bbch68 <- x[4, "doy"])
table.simple.68 <- do.call(rbind, table.simple.68)
table.simple.81 <- lapply(phen_simple_luht, function(x) bbch81 <- x[5, "doy"])
table.simple.81 <- do.call(rbind, table.simple.81)
table.simple.89 <- lapply(phen_simple_luht, function(x) bbch89 <- x[6, "doy"])
table.simple.89 <- do.call(rbind, table.simple.89)
res_sim <- list(table.simple.09, table.simple.63,
table.simple.68,table.simple.81,table.simple.89)
names(res_sim) <- colnames(cdd_mean[i,4:ncol(cdd_mean)]) # TODO: this only valid for bbch09 = 4th column
return(res_sim)
}
bbch_doy_sim <- lapply(1:nrow(data_calib), function(i) My_doy_bbch_sim(data_xts1 = data_xts1,
data_calib = data_calib,
t.mean.col = t.mean.col,
i = i,
date_sim_ini = date_sim_ini,
date_sim_end = date_sim_end,
GrowthStage_CDD_calib = GrowthStage_CDD_calib,
cdd_mean = cdd_mean))
labels(bbch_doy_sim[[1]])
str(bbch_doy_sim[[1]])
bbch_doy_sim_res <- lapply(bbch_doy_sim, function(i) {
output <- do.call(cbind,i)
colnames(output) <- labels(i)
return(output)
})
bbch_doy_sim_res
#' BBCH09
My_doy_bbch_sim_table <- function(bbch_doy_sim_res, bbch){
bbch_sim <- cbind.data.frame(matrix(NA, ncol = 49, nrow = 15))
bbch_sim[,1:2] <- data_calib[,2:3]
for(i in 1:length(bbch_doy_sim_res)){
bbch_sim[i,3:ncol(bbch_sim)] <- bbch_doy_sim_res[[i]][, bbch]
}
colnames(bbch_sim) <- c("date_ini", "date_end", 1974:2020)
write.csv(bbch_sim, file = paste0(folder.output, "/", bbch, "_doy_sim.csv"))
return(bbch_sim)
}
labels(bbch_doy_sim_res[[1]])
My_doy_bbch_sim_table(bbch_doy_sim_res = bbch_doy_sim_res, bbch = "BBCH.09")
My_doy_bbch_sim_table(bbch_doy_sim_res = bbch_doy_sim_res, bbch = "BBCH.63")
My_doy_bbch_sim_table(bbch_doy_sim_res = bbch_doy_sim_res, bbch = "BBCH.68")
My_doy_bbch_sim_table(bbch_doy_sim_res = bbch_doy_sim_res, bbch = "BBCH.81")
My_doy_bbch_sim_table(bbch_doy_sim_res = bbch_doy_sim_res, bbch = "BBCH.89")
cdd_mean
bbch09
bbch09_doy
data_xts_subset <- data_xts1[paste0(data_calib[i,"date_ini"],"/", data_calib[i,"date_end"])]
year <- format(index(data_xts_subset), format = "%Y")
doy <- format(index(data_xts_subset), format = "%j")
data_xts_subset <- cbind(data_xts_subset, year, doy)
head(data_xts_subset)
tail(data_xts_subset)
years <- factor(data_xts_subset[,"year"])
remich_years <- split(data_xts_subset, years)
#' Calculation of cumulative degree-days by a lower, upper and heat temperature thresholds (Molitor et al., 2014)
#' --------------------------------------------------------------------------------------------------
# thresholds for cultivar
cdd_luht <- cdd.luhThresh(data = remich_years,
t.mean.col = t.mean.col, a = a, b = b, c = c)
head(cdd_luht)
setwd("~/Documents/02_working/3-Production/02_projects/02_VinoManAOP/03_R/vineyard/R")
setwd("~/")
tmp <- cdd_luht
tmp <- cdd_luht[[1]]
tmp
tmp$cdd <- cumsum(tmp$tas)
tmp
#' Calculation of phenology by the lower, upper and heat temperature thresholds (Molitor et al., 2014)
#' --------------------------------------------------------------------------------------------------
# mean cumulative heat sum for bud break in degree celsius for simple bub break
cdd_phen_simple_luht <- vineyard::cdd.simple.luhThresh.phenology(cdd.bb = cdd_bb_simple,
cdd.luht = cdd_luht,
chs.mean = as.numeric(round(data_calib[i,"chs_mean"], digits = 2)))
cdd_bb_simple <- vineyard::cdd.simple.budbreak(data = remich_years,
t.mean.col = t.mean.col,
start.month = as.numeric(round(data_calib[i,"month"], digits = 0)),
start.day = as.numeric(round(data_calib[i,"day"], digits = 0)))
#' Calculation of cumulative degree-days by a lower, upper and heat temperature thresholds (Molitor et al., 2014)
#' --------------------------------------------------------------------------------------------------
# thresholds for cultivar
cdd_luht <- vineyard::cdd.luhThresh(data = remich_years,
t.mean.col = t.mean.col, a = a, b = b, c = c)
#' Calculation of phenology by the lower, upper and heat temperature thresholds (Molitor et al., 2014)
#' --------------------------------------------------------------------------------------------------
# mean cumulative heat sum for bud break in degree celsius for simple bub break
cdd_phen_simple_luht <- vineyard::cdd.simple.luhThresh.phenology(cdd.bb = cdd_bb_simple,
cdd.luht = cdd_luht,
chs.mean = as.numeric(round(data_calib[i,"chs_mean"], digits = 2)))
cdd_phen_simple_luht[[1]]
head(cdd_luht[[1]])
cdd_luht[[1]]
data(viridis)
library(viridis)
data(viridis)
data("iris")
iris
library(vineyard)
cite(vineyard)
cite("vineyard")
citation("vineyard")
library(EmiStatR)
detectCores()
library(parallel)
detectCores()
s <- system.time({
mn <- mclappy(1:1e7, function(i){
print(i)
}, mc.cores = 8)
})
s
s <- system.time({
mn <- mclapply(1:1e7, function(i){
print(i)
}, mc.cores = 8)
})
s
s <- system.time({
mn <- mclapply(1:1e7, function(i){
print(i)
}, mc.cores = 8)
})
s
s <- system.time({
mn <- mclapply(1:1e7, function(i){
print(i)
}, mc.cores = 8)
})
s
## Github's personal access token
# 4e9fdcacd46bfb7051fe24452bab8abdad3f2297
# github_token <-  "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" # (created on 2021-08-14, expires on 2021-11-14)
# github_token <- "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" # (created on 2021-11-05, expires on  Thu, Feb 3 2022)
github_token <- "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" # (created on 2022-02-06, expires on  Sat, May 7 2022)
##---------------------------------------------------------------------
## Chenyao PyPhenoModels
##---------------------------------------------------------------------
## working directory
wdir <-  "~/Documents/02_working/3-Production/02_projects/07_Clim4Vitis/pycharm/projects/calibration_PyPhenoModels/PyPhenoModels"
## commit label
commit.label <- 'implementation sce-ua'
## Github repository
username   <- "ArturoTorres"
password   <- github_token
repository <- "github.com/ChenyaoYang123/PyPhenoModels.git"
credential <- paste0("https://", username, ":", password, "@", repository)
##---------------------------------------------------------------------
## commit changes locally
##---------------------------------------------------------------------
## change to working directory
setwd(wdir)
## to see status of files
system("git status")
## to look previous status of commmits
system("git log")
## to see status of files
system("git status")
##---------------------------------------------------------------------
## Chenyao PyPhenoModels
##---------------------------------------------------------------------
## working directory
wdir <-  "~/Documents/02_working/3-Production/02_projects/07_Clim4Vitis/pycharm/projects/calibration_PyPhenoModels/PyPhenoModels"
## commit label
commit.label <- 'implementation sce-ua'
## Github repository
username   <- "ArturoTorres"
password   <- github_token
repository <- "github.com/ChenyaoYang123/PyPhenoModels.git"
credential <- paste0("https://", username, ":", password, "@", repository)
##---------------------------------------------------------------------
## commit changes locally
##---------------------------------------------------------------------
## change to working directory
setwd(wdir)
## to see status of files
system("git status")
## to commit changes with label
system(paste0("git commit -a -m '", commit.label, "'"))
## to see status of files
system("git status")
## to look previous status of commmits
system("git log")
##---------------------------------------------------------------------
## configuring remote.origin.url for Github repository and pushing
##---------------------------------------------------------------------
system(paste0("git config remote.origin.url ", credential))
system(paste0("git push ", credential, " sce-ua_brin"))
## to see status of files
system("git status")
## commit label
commit.label <- 'sce calibration - 500 repetitions'
## to stage files
system("git add .")
## to commit changes with label
system(paste0("git commit -a -m '", commit.label, "'"))
## to see status of files
system("git status")
## to look previous status of commmits
system("git log")
##---------------------------------------------------------------------
## configuring remote.origin.url for Github repository and pushing
##---------------------------------------------------------------------
system(paste0("git config remote.origin.url ", credential))
#' or push to branch
system(paste0("git push ", credential, " scripts_demos_ATO"))
system(paste0("git push ", credential, " sce-ua_brin"))
##---------------------------------------------------------------------
## vineyard (VinoManAOP project)
##---------------------------------------------------------------------
## working directory
wdir <-  "~/Documents/02_working/3-Production/02_projects/02_VinoManAOP/03_R/vineyard"
## commit label
commit.label <- 'solved issue in window.stat d.ref + t.ini <= 0'
## Gitlab repository
username   <- "Arturo.Torres"
password   <- "sehajsamadhi1A"
repository <- "git.list.lu/geocomputation/agriculture/vinomanaop/vineyard"
credential <- paste0("https://", username, ":", password, "@", repository)
##---------------------------------------------------------------------
## commit changes locally
##---------------------------------------------------------------------
## change to working directory
setwd(wdir)
## to see status of files
system("git status")
## to stage files
system("git add .")
## to commit changes with label
system(paste0("git commit -a -m '", commit.label, "'"))
## to see status of files
system("git status")
## to look previous status of commmits
system("git log")
##---------------------------------------------------------------------
## configuring remote.origin.url for Github repository and pushing
##---------------------------------------------------------------------
system(paste0("git config remote.origin.url ", credential))
system(paste0("git push ", credential, " master"))
##---------------------------------------------------------------------
## Chenyao PyPhenoModels
##---------------------------------------------------------------------
## working directory
wdir <-  "~/Documents/02_working/3-Production/02_projects/07_Clim4Vitis/pycharm/projects/calibration_PyPhenoModels/PyPhenoModels"
## commit label
commit.label <- 'sce calibration - 500 repetitions'
## Github repository
username   <- "ArturoTorres"
password   <- github_token
repository <- "github.com/ChenyaoYang123/PyPhenoModels.git"
credential <- paste0("https://", username, ":", password, "@", repository)
##---------------------------------------------------------------------
## commit changes locally
##---------------------------------------------------------------------
## change to working directory
setwd(wdir)
## to see status of files
system("git status")
##---------------------------------------------------------------------
## fetching and merging
##---------------------------------------------------------------------
system(paste0("git checkout master"))
wdir
##---------------------------------------------------------------------
## commit changes locally
##---------------------------------------------------------------------
## change to working directory
setwd(wdir)
## to see status of files
system("git status")
system(paste0("git pull ", credential))
system(paste0("git pull ", credential))
##---------------------------------------------------------------------
## Chenyao PyPhenoModels
##---------------------------------------------------------------------
## working directory
wdir <-  "~/Documents/02_working/3-Production/02_projects/07_Clim4Vitis/pycharm/projects/calibration_PyPhenoModels/PyPhenoModels"
## commit label
commit.label <- 'updated with Chenyao suggestions'
## Github repository
username   <- "ArturoTorres"
password   <- github_token
repository <- "github.com/ChenyaoYang123/PyPhenoModels.git"
credential <- paste0("https://", username, ":", password, "@", repository)
##---------------------------------------------------------------------
## commit changes locally
##---------------------------------------------------------------------
## change to working directory
setwd(wdir)
## to see status of files
system("git status")
## to stage files
system("git add .")
## to commit changes with label
system(paste0("git commit -a -m '", commit.label, "'"))
## to see status of files
system("git status")
## to look previous status of commmits
system("git log")
##---------------------------------------------------------------------
## configuring remote.origin.url for Github repository and pushing
##---------------------------------------------------------------------
system(paste0("git config remote.origin.url ", credential))
system(paste0("git push ", credential, " master"))
system(paste0("git push ", credential, " sce-ua_brin"))
